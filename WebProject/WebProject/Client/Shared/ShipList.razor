@using WebProject.Client.Services.ShipImageService
@using BlazorPro.Spinkit
@inject IShipSearchService ShipSearchService
@inject NavigationManager NavigationManager
@inject IShipImageService ShipImageService

<h3>Ship List</h3>
<br>
@if (Ships == null)
{
    <SpinLoader IsLoading="true">
        <LoadingTemplate>
            <div>
                <br />
                <br />
                <Chase Center="true" Color="blue" Size="40px"></Chase>
            </div>
        </LoadingTemplate>
    </SpinLoader>
}
else if (Ships.Count == 0)
{
    <span>It seems your criterias are too high, or database has no ships yet</span>
}
else
{
    foreach (var item in Ships)
    {
        <div class="card own-card-style">
            <h5 class="card-header">@item.Name</h5>
            <img class="ship-img" src="@GetImgRoute(item.Id)" alt="Image of the ship">
            <div class="card-body table-responsive">

                <table class="card-table">
                    <tr>
                        <td>Port: </td>
                        <td>@item.HomePort</td>
                        <td>Ranking: </td>
                        <td> ...</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>Capacity: </td>
                        <td>Max @item.MaxPeople people</td>
                        <td>Ship type: </td>
                        <td>@item.ShipType</td>
                        <td><button class="btn btn-dark" style="padding-left: 40px; padding-right: 40px" @onclick="(() => ShowShip(item.Id))">Show</button></td>
                    </tr>
                    <tr>
                        <td>Price at Weekends: </td>
                        <td>@item.PriceAtWeekEnds</td>
                        <td>Price at Weekdays: </td>
                        <td>@item.PriceAtWeekDays</td>
                        <td></td>
                    </tr>
                </table>
                <table>
                    <!--just for styling-->
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td> </td>
                        <td></td>
                    </tr>
                </table>
            </div>
        </div>
        <br>
    }
}

@code {
    [Parameter]
    public List<ShipDTO> Ships { get; set; }

    private List<ShipImageDTO> Images { get; set; } = new List<ShipImageDTO>();

    protected override async Task OnInitializedAsync()
    {
        Ships = await ShipSearchService.GetAvailableShips();
        Images = await ShipImageService.GetAllImages();
        StateHasChanged();
    }

    private void ShowShip(int id)
    {
        NavigationManager.NavigateTo($"ships/{id}");
        StateHasChanged();
    }

    private string GetImgRoute(int id)
    {
        ShipImageDTO img = Images.Find(x => x.ShipId == id);
        if (img == null)
            return "Images/img_not_found.png";
        else
            return img.RouteToPic;
    }
}
